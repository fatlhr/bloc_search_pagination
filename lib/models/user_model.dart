///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class UserModelItems {
/*
{
  "login": "doraemon",
  "id": 37202,
  "node_id": "MDQ6VXNlcjM3MjAy",
  "avatar_url": "https://avatars.githubusercontent.com/u/37202?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/doraemon",
  "html_url": "https://github.com/doraemon",
  "followers_url": "https://api.github.com/users/doraemon/followers",
  "following_url": "https://api.github.com/users/doraemon/following{/other_user}",
  "gists_url": "https://api.github.com/users/doraemon/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/doraemon/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/doraemon/subscriptions",
  "organizations_url": "https://api.github.com/users/doraemon/orgs",
  "repos_url": "https://api.github.com/users/doraemon/repos",
  "events_url": "https://api.github.com/users/doraemon/events{/privacy}",
  "received_events_url": "https://api.github.com/users/doraemon/received_events",
  "type": "User",
  "site_admin": false,
  "score": 1
} 
*/

  String? login;
  int? id;
  String? nodeId;
  String? avatarUrl;
  String? gravatarId;
  String? url;
  String? htmlUrl;
  String? followersUrl;
  String? followingUrl;
  String? gistsUrl;
  String? starredUrl;
  String? subscriptionsUrl;
  String? organizationsUrl;
  String? reposUrl;
  String? eventsUrl;
  String? receivedEventsUrl;
  String? type;
  bool? siteAdmin;
  int? score;

  UserModelItems({
    this.login,
    this.id,
    this.nodeId,
    this.avatarUrl,
    this.gravatarId,
    this.url,
    this.htmlUrl,
    this.followersUrl,
    this.followingUrl,
    this.gistsUrl,
    this.starredUrl,
    this.subscriptionsUrl,
    this.organizationsUrl,
    this.reposUrl,
    this.eventsUrl,
    this.receivedEventsUrl,
    this.type,
    this.siteAdmin,
    this.score,
  });
  UserModelItems.fromJson(Map<String, dynamic> json) {
    login = json['login']?.toString();
    id = json['id']?.toInt();
    nodeId = json['node_id']?.toString();
    avatarUrl = json['avatar_url']?.toString();
    gravatarId = json['gravatar_id']?.toString();
    url = json['url']?.toString();
    htmlUrl = json['html_url']?.toString();
    followersUrl = json['followers_url']?.toString();
    followingUrl = json['following_url']?.toString();
    gistsUrl = json['gists_url']?.toString();
    starredUrl = json['starred_url']?.toString();
    subscriptionsUrl = json['subscriptions_url']?.toString();
    organizationsUrl = json['organizations_url']?.toString();
    reposUrl = json['repos_url']?.toString();
    eventsUrl = json['events_url']?.toString();
    receivedEventsUrl = json['received_events_url']?.toString();
    type = json['type']?.toString();
    siteAdmin = json['site_admin'];
    score = json['score']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['login'] = login;
    data['id'] = id;
    data['node_id'] = nodeId;
    data['avatar_url'] = avatarUrl;
    data['gravatar_id'] = gravatarId;
    data['url'] = url;
    data['html_url'] = htmlUrl;
    data['followers_url'] = followersUrl;
    data['following_url'] = followingUrl;
    data['gists_url'] = gistsUrl;
    data['starred_url'] = starredUrl;
    data['subscriptions_url'] = subscriptionsUrl;
    data['organizations_url'] = organizationsUrl;
    data['repos_url'] = reposUrl;
    data['events_url'] = eventsUrl;
    data['received_events_url'] = receivedEventsUrl;
    data['type'] = type;
    data['site_admin'] = siteAdmin;
    data['score'] = score;
    return data;
  }
}

class UserModel {
/*
{
  "total_count": 838,
  "incomplete_results": false,
  "items": [
    {
      "login": "doraemon",
      "id": 37202,
      "node_id": "MDQ6VXNlcjM3MjAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/37202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/doraemon",
      "html_url": "https://github.com/doraemon",
      "followers_url": "https://api.github.com/users/doraemon/followers",
      "following_url": "https://api.github.com/users/doraemon/following{/other_user}",
      "gists_url": "https://api.github.com/users/doraemon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/doraemon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/doraemon/subscriptions",
      "organizations_url": "https://api.github.com/users/doraemon/orgs",
      "repos_url": "https://api.github.com/users/doraemon/repos",
      "events_url": "https://api.github.com/users/doraemon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/doraemon/received_events",
      "type": "User",
      "site_admin": false,
      "score": 1
    }
  ]
} 
*/

  int? totalCount;
  bool? incompleteResults;
  List<UserModelItems?>? items;

  UserModel({
    this.totalCount,
    this.incompleteResults,
    this.items,
  });
  UserModel.fromJson(Map<String, dynamic> json) {
    totalCount = json['total_count']?.toInt();
    incompleteResults = json['incomplete_results'];
    if (json['items'] != null) {
      final v = json['items'];
      final arr0 = <UserModelItems>[];
      v.forEach((v) {
        arr0.add(UserModelItems.fromJson(v));
      });
      items = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['total_count'] = totalCount;
    data['incomplete_results'] = incompleteResults;
    if (items != null) {
      final v = items;
      final arr0 = [];
      for (var v in v!) {
        arr0.add(v!.toJson());
      }
      data['items'] = arr0;
    }
    return data;
  }
}
